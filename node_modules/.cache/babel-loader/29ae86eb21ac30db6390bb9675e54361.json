{"ast":null,"code":"var _jsxFileName = \"/home/ghost/Documents/client/clicktocall/main/callwidget/src/widget/CallWidget.js\";\nimport React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton'; // import CancelIcon from './cancelbutton.png';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n  const [nasaData, setData] = React.useState({});\n\n  async function fetchData() {\n    const res = await fetch(\"https://codifyinditest.com/script_test/api-test/\");\n    const data = await res.json();\n    setData(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n    console.log('clicked true');\n  };\n\n  const handleClose = () => {\n    console.log('clicked true');\n    setOpen(false);\n  };\n\n  const {\n    labels,\n    phone_number\n  } = nasaData['script test'] || {};\n  const onValue = nasaData['script test'];\n  console.log('apple', onValue);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Call Us Now\"), /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, labels), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, phone_number)), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Save changes\"))));\n} // import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// class CallWidget extends Component{\n//   constructor(props)  {\n//     super(props);\n//     this.state = {\n//       onValue: [],\n//       oepn : false,\n//       setOpen : false,\n//     }\n//   }\n//   handleClickOpen = (state) => {\n//     console.log('click true');\n//     this.setState({setOpen : !state.setOpen});\n//     console.log(this.state.setOpen);\n//   };\n//   handleClose = (state) => {\n//     console.log('click false');\n//     this.setState({setOpen: !state.setOpen});\n//     console.log(this.state.setOpen);\n//   };\n//   componentDidMount= () => {\n//     this.fetchPerson();\n//  }\n//   fetchPerson = () => {\n//     fetch(\"https://codifyinditest.com/script_test/api-test/\")\n//     .then(data => data.json())\n//       .then(onValue => {\n//         this.setState({ onValue }, () => {\n//           console.log('bera',onValue);\n//         });  \n//       })\n//       .catch(error => {\n//         console.log(error);\n//     })\n//   }\n//   render() {\n//   return (\n//     <div>\n//       <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n//         Call Us Now\n//       </Button>\n//       {this.state.setOpen ? \n//       <Dialog\n//         open={this.state.open}\n//         onClose={this.handleClose}\n//         aria-labelledby=\"responsive-dialog-title\"\n//       >\n//         <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Let Google help apps determine location. This means sending anonymous location data to\n//             Google, even when no apps are running.\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button autoFocus onClick={this.handleClose} color=\"primary\">\n//             Disagree\n//           </Button>\n//           <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n//             Agree\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n//       : null }\n//     </div>\n//   );\n// }\n// }\n// export default CallWidget;\n// import React from \"react\";\n// import DataProvider from \"./DataProvider\";\n// import styles from \"../css/WidgetMaker.module.css\";\n// import { useState, useEffect } from \"react\";\n// export default function App(props) {\n//   async function getData() {\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     setData(data);\n//   }\n//   const data = DataProvider(\"https://codifyinditest.com/script_test/api-test/\");\n//     const { labels, phone_number } = data['script test'] || {};\n//     return (\n//       <div>\n//            {Object.keys(data).length ? \n//            (<div className={styles.card}>\n//             <div className={styles['click-to-call']}>\n//               <div className={styles['text-data']}>{labels}</div>\n//               <div className={styles['phone-number']}>{phone_number}</div>\n//             </div>\n//             <div className={styles.container}>\n//               <div className={styles['close-button']}>&#10005;</div> \n//             </div>\n//           </div>) \n//           : \n//           (<div className={`${styles.card} ${styles['text-data']}`}> Loading... </div>)}\n//       </div>\n//     );\n// }\n// // import Grid from '@material-ui/core/Grid';\n// // import './App.css';\n// // import Tabs from '@material-ui/core/Tabs';\n// // import Tab from '@material-ui/core/Tab';\n// // import Typography from '@material-ui/core/Typography';\n// // import AppBar from '@material-ui/core/AppBar';\n// // import TextField from '@material-ui/core/TextField';\n// // import MenuItem from '@material-ui/core/MenuItem';\n// // import FormHelperText from '@material-ui/core/FormHelperText';\n// // import FormControl from '@material-ui/core/FormControl';\n// // import Select from '@material-ui/core/Select';\n// // import Button from '@material-ui/core/Button';\n// // import issues from './issues.png'\n// // import star from './star.png'\n// // import members from './members.png'\n// // import scales from './scales.png'\n// // import pulls from './pulls.png'\n// // import Box from '@material-ui/core/Box';\n// // import PropTypes from 'prop-types';\n// // function TabPanel(props) {\n// //   const { children, value, index, ...other } = props;\n// //   return (\n// //     <Typography\n// //       component=\"div\"\n// //       role=\"tabpanel\"\n// //       hidden={value !== index}\n// //       id={`wrapped-tabpanel-${index}`}\n// //       aria-labelledby={`wrapped-tab-${index}`}\n// //       {...other}\n// //     >\n// //       <Box p={5}>{children}</Box>\n// //     </Typography>\n// //   );\n// // }\n// // TabPanel.propTypes = {\n// //   children: PropTypes.node,\n// //   index: PropTypes.any.isRequired,\n// //   value: PropTypes.any.isRequired,\n// // };\n// // function a11yProps(index) {\n// //   return {\n// //     id: `wrapped-tab-${index}`,\n// //     'aria-controls': `wrapped-tabpanel-${index}`,\n// //   };\n// // }\n// // class App extends Component {\n// //   constructor(props)  {\n// //   super(props);\n// //   this.state = {\n// //     Person: [],\n// //     Repos:[],\n// //     type:'',\n// //     lang:'All',\n// //     profile:[],\n// //     diffDays:[],\n// //     login:[],\n// //     avatar:[],\n// //     // value:'two',\n// //     setValue:'two',\n// //     searchRepo:'',\n// //     langResults:[],\n// //   }\n// // }\n// //   componentDidMount = () => {\n// //     this.fetchPerson();\n// //     this.fetchRepos();\n// //     this.filterArray();\n// //   }\n// //   fetchPerson = () => {\n// //     fetch(`https://api.github.com/users/supreetsingh247?`)\n// //       .then(data => data.json())\n// //       .then(Person => {\n// //         this.setState({ Person }, () => {\n// //           console.log('bera',Person);\n// //         });  \n// //       })\n// //       .catch(error => {\n// //         console.log(error);\n// //     })\n// //   }\n// //   fetchRepos = (param) => {\n// //     fetch(`https://api.github.com/users/supreetsingh247/repos?${param}`)\n// //       .then(data => data.json())\n// //       .then(langResults => {\n// //         this.setState({ langResults }, \n// //           ()=>{\n// //           this.setState({Repos:langResults});}\n// //         );\n// //       })\n// //       .catch(error => {\n// //         console.log(error);\n// //     })\n// //       console.log('reposResult',this.state.langResults);\n// //   }\n// //   tabSwitch = (event,newValue) => {\n// //     // this.setState({setValue:event.target.newValue});\n// //     // this.forceUpdate();\n// //   };\n// //   textSearch=(event,searchRepo)=>{\n// //     this.setState({searchRepo:event.target.value});\n// //   }\n// //   typeSearch=(event)=>{\n// //     // var {type}=this.state;\n// //     console.log('appppp',this.state.type);\n// //     this.setState({type:event.target.value},()=>{\n// //       console.log('val11',this.state.type);\n// //     });\n// //     this.filterArray();\n// //   }\n// //   langSearch=(event)=>{\n// //     const {lang}=this.state;\n// //     this.setState({lang:event.target.value},()=>{\n// //     this.filterArray()});\n// //   }\n// //   filterArray=()=>{\n// //     const {Repos,langResults,lang}=this.state;\n// //     console.log('valRepos',Repos);\n// //     console.log('vallangResults',langResults);\n// //     console.log('vallang',lang);\n// //     if(this.state.lang==='All'){\n// //       this.setState({\n// //         Repos:this.state.langResults\n// //       })\n// //     } else{\n// //         this.setState({\n// //           Repos:langResults.filter(item=> item.language===this.state.lang)\n// //         })  }\n// //   }\n// //   render(){\n// //     const {Person,Repos,}=this.state;\n// //     const login=Repos.map((item,index)=>item.owner.login );\n// //     var loginId=login.splice(1,login.length-1);\n// //     const avatar=Repos.map((item,index)=>item.owner.avatar_url);\n// //     var avatarId=avatar.splice(1,avatar.length-1);\n// //     const oneDay = 24 * 60 * 60 * 1000;\n// //     const profile=Repos.map((item,index)=>item.updated_at);\n// //     var today=new Date();\n// //     for(var i=0;i<profile.length;i++)\n// //     {\n// //       var day=new Date(profile[i]); \n// //       console.log('day',day);\n// //       var diff = Math.round(Math.abs(day - today) / oneDay);\n// //       const diffDays=diff;\n// //   }\n// //   return(\n// //     <div className=\"app\">\n// //       <Grid  spacing={2} container  justify=\"center\">\n// //         <Grid item >\n// //           <img className=\"avatar\" src={avatar} alt='avatar'/>\n// //           <Typography>Supreet Singh</Typography>\n// //           <Typography>{login}</Typography>\n// //           <Typography>Front end developer since 1.5 years.</Typography>\n// //           <Button className=\"editBio\" variant='contained' >Edit Bio</Button>\n// //         </Grid>\n// //         <Grid item >\n// //           <div>\n// //             <Tabs\n// //               onChange={this.tabSwitch}\n// //               indicatorColor=\"primary\"\n// //               textColor=\"primary\"\n// //               centered\n// //               className=\"tabs\"\n// //             >\n// //               <Tab value=\"Overview\" label=\"Overview\" wrapped {...a11yProps('one')} />\n// //               <Tab value=\"Repositories\" label=\"Repositories\" wrapped {...a11yProps('two')} />\n// //               <Tab value=\"Star\" label=\"Star\" wrapped {...a11yProps('three')} />\n// //               <Tab value=\"Followers\" label=\"Followers\" wrapped {...a11yProps('four')} />\n// //               <Tab value=\"Following\" label=\"Following\" wrapped {...a11yProps('five')} />                \n// //             </Tabs>\n// //           </div>\n// //           <div>\n// //             <TabPanel value={this.state.setValue} index=\"one\">\n// //               Nothing To Show\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"two\">\n// //             <div className=\"search\">\n// //               <TextField \n// //                 autoComplete \n// //                 placeholder=\"Search Repositories...\"\n// //                 className=\"textSearch\" \n// //                 onChange={this.textSearch} \n// //                 value={this.searchRepo}\n// //                 variant=\"outlined\"\n// //               >\n// //               </TextField>\n// //             <FormControl className=\"formControl\" >\n// //               <Button color='none' variant=\"contained\" >\n// //                 <span>Type: </span>\n// //                 <Select\n// //                   className=\"typeButton\"\n// //                   native\n// //                   value={this.state.type}\n// //                   onChange={this.typeSearch}\n// //                 > \n// //                   <option calue=\"All\">All</option>\n// //                   <option value=\"source\">Sources</option>\n// //                   <option value=\"forks\">Forked</option>\n// //                   <option value=\"archived\">Archived</option>\n// //                   <option value=\"mirror_url\">Mirrors</option>\n// //                 </Select>\n// //               </Button>\n// //             </FormControl>\n// //             <FormControl className=\"formControl\" >\n// //               <Button color='none' variant=\"contained\" >\n// //                 <span>Language: </span>\n// //                 <Select\n// //                   className=\"languageButton\"\n// //                   native\n// //                   value={this.lang}\n// //                   onChange={this.langSearch}\n// //                 > \n// //                   <option value=\"All\">All</option>\n// //                   <option value=\"JavaScript\">JavaScript</option>\n// //                   <option value=\"CSS\">CSS</option>\n// //                   <option value=\"TypeScript\">TypeScript</option>\n// //                   <option value=\"HTML\">HTML</option>\n// //                 </Select>\n// //               </Button>\n// //             </FormControl>\n// //           </div>\n// //           <div className=\"details\">\n// //             {\n// //               this.state.Repos && \n// //               Repos.length && \n// //               Repos.map((item,index) =>\n// //               <div className=\"projectDetail\">\n// //                 <div>\n// //                   <Typography className=\"projectName\" color='Primary'>\n// //                     <h3>{item.name}</h3>\n// //                   </Typography>\n// //                 </div>\n// //                 <div><Typography className=\"desc\">{item.description ? item.description:''}</Typography></div>\n// //                 <div className=\"langName\">\n// //                   <Typography className=\"detailName\">\n// //                     {item.language ? <span className=\"dot\"/> : ''}\n// //                     {item.language ? item.language : ''}\n// //                     {item.license ? <img className=\"scales\" src={scales} alt=\"scales\"/> : ''}\n// //                     {item.license ? item.license.spdx_id : ''}                \n// //                   </Typography>  \n// //                 </div>\n// //               </div>\n// //             )}\n// //             </div>\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"three\">\n// //               Nothing to show\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"four\">\n// //               Nothing to show\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"five\">\n// //               Nothing to show\n// //             </TabPanel>\n// //             </div>\n// //         </Grid>\n// //         </Grid>\n// //       </div>\n// //     );\n// //   }\n// // }","map":{"version":3,"sources":["/home/ghost/Documents/client/clicktocall/main/callwidget/src/widget/CallWidget.js"],"names":["React","useEffect","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","Typography","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","CustomizedDialogs","open","setOpen","useState","nasaData","setData","fetchData","res","fetch","data","json","handleClickOpen","console","log","handleClose","labels","phone_number","onValue"],"mappings":"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;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\n// import CancelIcon from './cancelbutton.png';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          {/* <CloseIcon /> */}\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n  const [nasaData,  setData] = React.useState({ });\n\n  async function fetchData() {\n    const res = await fetch(\"https://codifyinditest.com/script_test/api-test/\")\n    const data = await res.json()\n    setData(data)\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  \n  const handleClickOpen = () => {\n    setOpen(true);\n    console.log('clicked true');\n  };\n  const handleClose = () => {\n    console.log('clicked true');\n    setOpen(false);\n  };\n\n  const { labels, phone_number } = nasaData['script test'] || {};\n\n  const onValue = nasaData['script test'];\n  console.log('apple', onValue);\n\n    \n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Call Us Now\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {labels}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            {phone_number}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\n// import React, { Component } from 'react';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// class CallWidget extends Component{\n\n//   constructor(props)  {\n//     super(props);\n//     this.state = {\n//       onValue: [],\n//       oepn : false,\n//       setOpen : false,\n//     }\n//   }\n\n//   handleClickOpen = (state) => {\n//     console.log('click true');\n//     this.setState({setOpen : !state.setOpen});\n//     console.log(this.state.setOpen);\n//   };\n\n//   handleClose = (state) => {\n//     console.log('click false');\n//     this.setState({setOpen: !state.setOpen});\n//     console.log(this.state.setOpen);\n//   };\n\n//   componentDidMount= () => {\n//     this.fetchPerson();\n//  }\n\n//   fetchPerson = () => {\n//     fetch(\"https://codifyinditest.com/script_test/api-test/\")\n//     .then(data => data.json())\n//       .then(onValue => {\n//         this.setState({ onValue }, () => {\n//           console.log('bera',onValue);\n//         });  \n//       })\n//       .catch(error => {\n//         console.log(error);\n//     })\n//   }\n    \n    \n//   render() {\n//   return (\n//     <div>\n//       <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n//         Call Us Now\n//       </Button>\n//       {this.state.setOpen ? \n//       <Dialog\n//         open={this.state.open}\n//         onClose={this.handleClose}\n//         aria-labelledby=\"responsive-dialog-title\"\n//       >\n//         <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Let Google help apps determine location. This means sending anonymous location data to\n//             Google, even when no apps are running.\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button autoFocus onClick={this.handleClose} color=\"primary\">\n//             Disagree\n//           </Button>\n//           <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n//             Agree\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n//       : null }\n//     </div>\n//   );\n// }\n// }\n// export default CallWidget;\n\n\n\n\n// import React from \"react\";\n// import DataProvider from \"./DataProvider\";\n// import styles from \"../css/WidgetMaker.module.css\";\n// import { useState, useEffect } from \"react\";\n\n// export default function App(props) {\n\n//   async function getData() {\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     setData(data);\n//   }\n\n\n//   const data = DataProvider(\"https://codifyinditest.com/script_test/api-test/\");\n//     const { labels, phone_number } = data['script test'] || {};\n//     return (\n//       <div>\n//            {Object.keys(data).length ? \n//            (<div className={styles.card}>\n//             <div className={styles['click-to-call']}>\n//               <div className={styles['text-data']}>{labels}</div>\n//               <div className={styles['phone-number']}>{phone_number}</div>\n//             </div>\n//             <div className={styles.container}>\n//               <div className={styles['close-button']}>&#10005;</div> \n//             </div>\n//           </div>) \n//           : \n//           (<div className={`${styles.card} ${styles['text-data']}`}> Loading... </div>)}\n//       </div>\n//     );\n// }\n\n\n\n// // import Grid from '@material-ui/core/Grid';\n// // import './App.css';\n// // import Tabs from '@material-ui/core/Tabs';\n// // import Tab from '@material-ui/core/Tab';\n// // import Typography from '@material-ui/core/Typography';\n// // import AppBar from '@material-ui/core/AppBar';\n// // import TextField from '@material-ui/core/TextField';\n// // import MenuItem from '@material-ui/core/MenuItem';\n// // import FormHelperText from '@material-ui/core/FormHelperText';\n// // import FormControl from '@material-ui/core/FormControl';\n// // import Select from '@material-ui/core/Select';\n// // import Button from '@material-ui/core/Button';\n// // import issues from './issues.png'\n// // import star from './star.png'\n// // import members from './members.png'\n// // import scales from './scales.png'\n// // import pulls from './pulls.png'\n// // import Box from '@material-ui/core/Box';\n// // import PropTypes from 'prop-types';\n\n\n// // function TabPanel(props) {\n// //   const { children, value, index, ...other } = props;\n\n// //   return (\n// //     <Typography\n// //       component=\"div\"\n// //       role=\"tabpanel\"\n// //       hidden={value !== index}\n// //       id={`wrapped-tabpanel-${index}`}\n// //       aria-labelledby={`wrapped-tab-${index}`}\n// //       {...other}\n// //     >\n// //       <Box p={5}>{children}</Box>\n// //     </Typography>\n// //   );\n// // }\n// // TabPanel.propTypes = {\n// //   children: PropTypes.node,\n// //   index: PropTypes.any.isRequired,\n// //   value: PropTypes.any.isRequired,\n// // };\n\n// // function a11yProps(index) {\n// //   return {\n// //     id: `wrapped-tab-${index}`,\n// //     'aria-controls': `wrapped-tabpanel-${index}`,\n// //   };\n// // }\n\n  \n\n// // class App extends Component {\n// //   constructor(props)  {\n// //   super(props);\n// //   this.state = {\n// //     Person: [],\n// //     Repos:[],\n// //     type:'',\n// //     lang:'All',\n// //     profile:[],\n// //     diffDays:[],\n// //     login:[],\n// //     avatar:[],\n// //     // value:'two',\n// //     setValue:'two',\n// //     searchRepo:'',\n// //     langResults:[],\n// //   }\n// // }\n// //   componentDidMount = () => {\n// //     this.fetchPerson();\n// //     this.fetchRepos();\n// //     this.filterArray();\n// //   }\n\n\n// //   fetchPerson = () => {\n// //     fetch(`https://api.github.com/users/supreetsingh247?`)\n// //       .then(data => data.json())\n// //       .then(Person => {\n// //         this.setState({ Person }, () => {\n// //           console.log('bera',Person);\n// //         });  \n// //       })\n// //       .catch(error => {\n// //         console.log(error);\n// //     })\n// //   }\n  \n// //   fetchRepos = (param) => {\n// //     fetch(`https://api.github.com/users/supreetsingh247/repos?${param}`)\n// //       .then(data => data.json())\n// //       .then(langResults => {\n// //         this.setState({ langResults }, \n// //           ()=>{\n// //           this.setState({Repos:langResults});}\n// //         );\n// //       })\n// //       .catch(error => {\n// //         console.log(error);\n// //     })\n// //       console.log('reposResult',this.state.langResults);\n// //   }\n// //   tabSwitch = (event,newValue) => {\n// //     // this.setState({setValue:event.target.newValue});\n// //     // this.forceUpdate();\n// //   };\n\n// //   textSearch=(event,searchRepo)=>{\n// //     this.setState({searchRepo:event.target.value});\n// //   }\n// //   typeSearch=(event)=>{\n// //     // var {type}=this.state;\n// //     console.log('appppp',this.state.type);\n// //     this.setState({type:event.target.value},()=>{\n// //       console.log('val11',this.state.type);\n// //     });\n// //     this.filterArray();\n// //   }\n// //   langSearch=(event)=>{\n// //     const {lang}=this.state;\n// //     this.setState({lang:event.target.value},()=>{\n// //     this.filterArray()});\n// //   }\n\n// //   filterArray=()=>{\n// //     const {Repos,langResults,lang}=this.state;\n// //     console.log('valRepos',Repos);\n// //     console.log('vallangResults',langResults);\n// //     console.log('vallang',lang);\n// //     if(this.state.lang==='All'){\n// //       this.setState({\n// //         Repos:this.state.langResults\n// //       })\n// //     } else{\n// //         this.setState({\n// //           Repos:langResults.filter(item=> item.language===this.state.lang)\n// //         })  }\n// //   }\n\n// //   render(){\n// //     const {Person,Repos,}=this.state;\n// //     const login=Repos.map((item,index)=>item.owner.login );\n// //     var loginId=login.splice(1,login.length-1);\n// //     const avatar=Repos.map((item,index)=>item.owner.avatar_url);\n// //     var avatarId=avatar.splice(1,avatar.length-1);\n// //     const oneDay = 24 * 60 * 60 * 1000;\n// //     const profile=Repos.map((item,index)=>item.updated_at);\n// //     var today=new Date();\n// //     for(var i=0;i<profile.length;i++)\n// //     {\n// //       var day=new Date(profile[i]); \n// //       console.log('day',day);\n// //       var diff = Math.round(Math.abs(day - today) / oneDay);\n// //       const diffDays=diff;\n// //   }\n  \n// //   return(\n// //     <div className=\"app\">\n// //       <Grid  spacing={2} container  justify=\"center\">\n// //         <Grid item >\n// //           <img className=\"avatar\" src={avatar} alt='avatar'/>\n// //           <Typography>Supreet Singh</Typography>\n// //           <Typography>{login}</Typography>\n// //           <Typography>Front end developer since 1.5 years.</Typography>\n// //           <Button className=\"editBio\" variant='contained' >Edit Bio</Button>\n// //         </Grid>\n  \n// //         <Grid item >\n// //           <div>\n// //             <Tabs\n// //               onChange={this.tabSwitch}\n// //               indicatorColor=\"primary\"\n// //               textColor=\"primary\"\n// //               centered\n// //               className=\"tabs\"\n// //             >\n// //               <Tab value=\"Overview\" label=\"Overview\" wrapped {...a11yProps('one')} />\n// //               <Tab value=\"Repositories\" label=\"Repositories\" wrapped {...a11yProps('two')} />\n// //               <Tab value=\"Star\" label=\"Star\" wrapped {...a11yProps('three')} />\n// //               <Tab value=\"Followers\" label=\"Followers\" wrapped {...a11yProps('four')} />\n// //               <Tab value=\"Following\" label=\"Following\" wrapped {...a11yProps('five')} />                \n// //             </Tabs>\n// //           </div>\n// //           <div>\n// //             <TabPanel value={this.state.setValue} index=\"one\">\n// //               Nothing To Show\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"two\">\n// //             <div className=\"search\">\n// //               <TextField \n// //                 autoComplete \n// //                 placeholder=\"Search Repositories...\"\n// //                 className=\"textSearch\" \n// //                 onChange={this.textSearch} \n// //                 value={this.searchRepo}\n// //                 variant=\"outlined\"\n// //               >\n// //               </TextField>\n// //             <FormControl className=\"formControl\" >\n// //               <Button color='none' variant=\"contained\" >\n// //                 <span>Type: </span>\n// //                 <Select\n// //                   className=\"typeButton\"\n// //                   native\n// //                   value={this.state.type}\n// //                   onChange={this.typeSearch}\n// //                 > \n// //                   <option calue=\"All\">All</option>\n// //                   <option value=\"source\">Sources</option>\n// //                   <option value=\"forks\">Forked</option>\n// //                   <option value=\"archived\">Archived</option>\n// //                   <option value=\"mirror_url\">Mirrors</option>\n\n// //                 </Select>\n// //               </Button>\n// //             </FormControl>\n\n// //             <FormControl className=\"formControl\" >\n// //               <Button color='none' variant=\"contained\" >\n// //                 <span>Language: </span>\n// //                 <Select\n// //                   className=\"languageButton\"\n// //                   native\n// //                   value={this.lang}\n// //                   onChange={this.langSearch}\n// //                 > \n// //                   <option value=\"All\">All</option>\n// //                   <option value=\"JavaScript\">JavaScript</option>\n// //                   <option value=\"CSS\">CSS</option>\n// //                   <option value=\"TypeScript\">TypeScript</option>\n// //                   <option value=\"HTML\">HTML</option>\n\n// //                 </Select>\n// //               </Button>\n// //             </FormControl>\n// //           </div>\n// //           <div className=\"details\">\n// //             {\n// //               this.state.Repos && \n// //               Repos.length && \n// //               Repos.map((item,index) =>\n// //               <div className=\"projectDetail\">\n// //                 <div>\n// //                   <Typography className=\"projectName\" color='Primary'>\n// //                     <h3>{item.name}</h3>\n// //                   </Typography>\n// //                 </div>\n// //                 <div><Typography className=\"desc\">{item.description ? item.description:''}</Typography></div>\n// //                 <div className=\"langName\">\n// //                   <Typography className=\"detailName\">\n// //                     {item.language ? <span className=\"dot\"/> : ''}\n// //                     {item.language ? item.language : ''}\n// //                     {item.license ? <img className=\"scales\" src={scales} alt=\"scales\"/> : ''}\n// //                     {item.license ? item.license.spdx_id : ''}                \n// //                   </Typography>  \n// //                 </div>\n// //               </div>\n// //             )}\n// //             </div>\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"three\">\n// //               Nothing to show\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"four\">\n// //               Nothing to show\n// //             </TabPanel>\n// //             <TabPanel value={this.state.setValue} index=\"five\">\n// //               Nothing to show\n// //             </TabPanel>\n// //             </div>\n// //         </Grid>\n// //         </Grid>\n// //       </div>\n// //     );\n// //   }\n// // }\n\n\n"]},"metadata":{},"sourceType":"module"}